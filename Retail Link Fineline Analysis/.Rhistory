install.packages "RSQLSERVER"
install.packages(RSQLSERVER)
install.packages("RSQLSERVER")
install.packages("RSQLServer")
library(rsqlserver)
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("Rtools")
install.packages("Rtoosl")
install.packages("Rtools")
install.packages(pkg='c:/Users/MILLERBARR/Downloads/rClr_0.1-xx.zip')
install.packages(pkg='c:/Users/MILLERBARR/Downloads/rClr_0.5-2.zip')
install.packages(pkg='c:/Users/MILLERBARR/Downloads/rClr_0.5-2.zip')
library(rClr)
library(testthat)
test_package('rClr')
install.packages("rClr")
install.packages(pkgs = "C:/Users/Millerbarr/Downloads/rClr_0.5-2.zip")
?install.packages
install.packages(pkgs = "C:/Users/Millerbarr/Downloads/rClr_0.5-2.zip")
install.packages(pkgs = "C:/Users/Millerbarr/Downloads/rClr_0.5-2.zip", repos=NULL)
library(rClr)
library(testthat)
test_package('rClr')
require(devtools)
install.packages("Rtools")
require(devtools)
install_github("rClr", 'jmp75')
install_github('rsqlserver', 'agstudy')
library(rsqlserver)
?rsqlserver
?dbSendQuery
library(rsqlserver)
drv <- dbDriver("SqlServer")
prod <- dbConnect(drv, url = "Server=tra.tyson.com;Database=TRA_MART_MSS;Trusted_Connection=True;")
dev <- dbConnect(drv, url = "Server=tradev.tyson.com;Database=TRA_MART_MSS;Trusted_Connection=True;")
mikeFinelines <- dbGetQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines <- dbGetQuery(dev, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
mikeFinelines <- dbGetQuery(prod, "select
library(rsqlserver)
drv <- dbDriver("SqlServer")
prod <- dbConnect(drv, url = "Server=tra.tyson.com;Database=TRA_STG_MSS;Trusted_Connection=True;")
dev <- dbConnect(drv, url = "Server=tradev.tyson.com;Database=TRA_STG_MSS;Trusted_Connection=True;")
mikeFinelines <- dbGetQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
mikeFinelines <- dbGetQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
sum(wtd.POS_QTY) posQty,
mikeFinelines <- sqlQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
library(RODBC)
rod <- odbcConnect("TRA_Prod")
dev <- odbcConnect("TRA_Dev")
library(RODBC)
prod <- odbcConnect("TRA_Prod")
dev <- odbcConnect("TRA_Dev")
mikeFinelines <- sqlQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines <- sqlQuery(dev, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines
mikeFinelines <- sqlQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines <- sqlQuery(dev, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
import(ggplot2)
library(ggplot2)
?qplot
qplot(x=mikeFinelines$FINELINE_NO, y=mikeFinelines$)
qplot(x=mikeFinelines$FINELINE_NO, y=mikeFinelines$rowCnt)
View(mikeFinelines)
di.FINELINE_DESCR
japrilFinelines$source <- "Aprilia"
mikeFinelines$source <- "Mike"
combined = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
View(combined)
combined[combined$source.y=NA]
combined[combined$source.y==NA]
combined[combined$source.y=="NA"]
combined[combined$source.y=="NA",]
combined[combined$source.x=="NA",]
count(combined[combined$source.x=="NA",])
rowcount(combined[combined$source.x=="NA",])
length(combined[combined$source.x=="NA",])
count(combined[combined$source.x=="NA",])
combined[combined$source.x=="NA",]
rows(combined[combined$source.x=="NA",])
nrow(combined[combined$source.x=="NA",])
nrow(combined[isna(combined$source.x),])
nrow(combined[is.na(combined$source.x),])
combined[is.na(combined$source.x),]
length(combined[is.na(combined$source.x),])
ncol(combined[is.na(combined$source.x),])
nrow(combined[is.na(combined$source.x),])
nrow(combined[is.na(combined$source.y),])
combined[is.na(combined$source.y),]
View(mikeFinelines)
ggplot(combined, aes(FINELINE_NO, rowCnt))
g = ggplot(combined, aes(FINELINE_NO, rowCnt))
g + geom_line()
g = ggplot(combined, aes(FINELINE_NO, rowCnt.x))
g + geom_line()
g + geom_line(aes(rowCnt.y), color="red")
g + geom_line(aes(rowCnt.y), color="rowCnt.y") +
geom_line(aes(rowCnt.x), color="rowCnt.x")
g = ggplot(combined, aes(FINELINE_NO))
g + geom_line(aes(y=rowCnt.x, color="rowCnt.x")) + geom_line(aes(y=rowCnt.y, color="rowCnt.y"))
g + geom_line(aes(y=rowCnt.x, color="Aprilia")) + geom_line(aes(y=rowCnt.y, color="Mike"))
g = ggplot(combined
)
g = ggplot(combined)
g + geom_bar(aes(x="A.RowCnt", y=rowCnt.x, color="red"))
g + geom_bar(aes(x="M.RowCnt", y=rowCnt.x))
g = ggplot(combined)
g + geom_bar(aes(x="A.RowCnt", y=rowCnt.x, color="red"))
g + geom_bar(aes(x="M.RowCnt", y=rowCnt.x, color="blue"))
g = ggplot(combined)
g + geom_bar(aes(x="A.RowCnt", y=rowCnt.x, color="red"))
g + geom_bar(aes(x="M.RowCnt", y=rowCnt.x, color="blue"))
g + facet_grid(. ~ FINELINE_NO)
g = ggplot(combined)
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(aes(x="A.RowCnt", y=rowCnt.x, color="red"))
g + geom_bar(aes(x="M.RowCnt", y=rowCnt.x, color="blue"))
g = ggplot(combined)
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(aes(y=rowCnt.x, color="red"))
g + geom_bar(aes(y=rowCnt.x, color="blue"))
combine = rbind(japrilFinelines, mikeFinelines)
remove(combine)
combined = rbind(japrilFinelines, mikeFinelines)
View(combined)
g = ggplot(combined, aes(x=source))
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(aes(y=rowCnt.x, color="red"))
g + geom_bar(aes(y=rowCnt.x, color="blue"))
g = ggplot(combined, aes(x=source))
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(aes(y=rowCnt))
g = ggplot(combined, aes(x=source, y=rowCnt))
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar()
g = ggplot(combined, aes(x=source, y=rowCnt))
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar()
source('C:/Users/Millerbarr/Desktop/FinelineAnalysis/fineLineAnalysis.R', echo=TRUE)
combined = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
View(combined)
g = ggplot(combined, aes(x=source, y=rowCnt))
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar()
g = ggplot(combined, aes(x=source, y=rowCnt.x))
g + facet_grid(. ~ FINELINE_NO)
g + geom_bar()
g = ggplot(combined, aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line()
g = ggplot(combined, aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line() + ylim(0, 200000)
g = ggplot(combined, aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line() + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue")
g = ggplot(combined, aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line(aes(y=rowCnr.x), color="red") + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue") + ylim(0, 200000)
g = ggplot(combined[combined$FINELINE_NO==1005], aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line(aes(y=rowCnr.x), color="red") + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue") + ylim(0, 200000)
g = ggplot(combined[combined$FINELINE_NO==1005,], aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line(aes(y=rowCnr.x), color="red") + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue") + ylim(0, 200000)
g = ggplot(combined[combined$FINELINE_NO==1005,], aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line(aes(y=rowCnr.x), color="red") + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue") + ylim(0, 200000)
g = ggplot(combined[combined$FINELINE_NO==1005,], aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line(aes(y=rowCnr.x), color="red") + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue") + ylim(0, 200000)
g = ggplot(combined[combined$FINELINE_NO==1005,], aes(x=FINELINE_NO, y=rowCnt.x))
g + geom_line(aes(y=rowCnt.x), color="red") + ylim(0, 200000)
g + geom_line(aes(y=rowCnt.y), color="blue") + ylim(0, 200000)
merged = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
stacked = rbind(japrilFinelines, mikeFinelines)
View(stacked)
library(reshape)
merged = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
View(combined)
mikeFinelines <- sqlQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines <- sqlQuery(dev, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
prod <- odbcConnect("TRA_Prod")
dev <- odbcConnect("TRA_Dev")
mikeFinelines <- sqlQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines <- sqlQuery(dev, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
odbcClose(prod)
odbcClose(dev)
merged = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
remove("combined")
View(merged)
remove("stacked")
melted= melt(merged, id=c("FINELINE_NO")))
melted= melt(merged, id=c("FINELINE_NO"))
View(melted)
melted= melt(merged[,c("FINELINE_NO", "rowCnt.x", "rowCnt.y")], id=c("FINELINE_NO"))
View(melted)
melted[melted$FINELINE_NO==1,]
library(RODBC)
library(ggplot2)
library(reshape)
prod <- odbcConnect("TRA_Prod")
dev <- odbcConnect("TRA_Dev")
mikeFinelines <- sqlQuery(prod, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
japrilFinelines <- sqlQuery(dev, "select
di.FINELINE_NO,
di.FINELINE_DESCR,
count(*) as rowCnt,
sum(wtd.POS_QTY) posQty,
sum(wtd.POS_SALES_AMT) posSales
from tra_stg_mss.landing.IMPORT_RETAILLINK_DAILY_STORE_ITEM_WTD_DAILY_COLUMNS wtd
inner join tra_mart_mss.dbo.dim_item di
on wtd.item_no = di.item_no
and di.ITEM_CURRENT_IND = 'Current'
group by
di.FINELINE_NO,
di.FINELINE_DESCR
order by FINELINE_NO")
odbcClose(prod)
odbcClose(dev)
merged = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
meltedRowCnt= melt(merged[,c("FINELINE_NO", "rowCnt.x", "rowCnt.y")], id=c("FINELINE_NO"))
meltedPosQty= melt(merged[,c("FINELINE_NO", "posQty.x", "posQty.y")], id=c("FINELINE_NO"))
#g = ggplot(combined[combined$FINELINE_NO==1005,], aes(x=FINELINE_NO, y=rowCnt.x))
#g + geom_line(aes(y=posQty.x), color="red") + ylim(0, 200000)
#g + geom_line(aes(y=posQty.y), color="blue") + ylim(0, 200000)
View(meltedRowCnt)
View(meltedPosQty)
meltedRowCnt[variable=="rowCnt.x",variable="Aprilia"]
meltedRowCnt[variable=="rowCnt.x",variable]="Aprilia"
meltedRowCnt[variable=="rowCnt.x",c("variable")]="Aprilia"
meltedRowCnt[variable=="rowCnt.x",c("variable")]="Aprilia"
meltedRowCnt[variable=="rowCnt.x",c(variable)]="Aprilia"
meltedRowCnt[meltedRowCnt$variable=="rowCnt.x",c("variable")]="Aprilia"
View(meltedRowCnt)
levels(meltedRowCnt$variable)
levels(meltedRowCnt$variable)==c("Aprilia", "Mike")
merged = merge(x=japrilFinelines, y=mikeFinelines, by="FINELINE_NO", all = TRUE)
meltedRowCnt= melt(merged[,c("FINELINE_NO", "rowCnt.x", "rowCnt.y")], id=c("FINELINE_NO"))
meltedPosQty= melt(merged[,c("FINELINE_NO", "posQty.x", "posQty.y")], id=c("FINELINE_NO"))
levels(meltedRowCnt$variable)==c("Aprilia", "Mike")
View(meltedRowCnt)
View(meltedRowCnt)
levels(meltedRowCnt$variable) <- c("Aprilia", "Mike")
View(meltedRowCnt)
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1005,], aes(x=variable, y=value))
g + geom_bar()
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar()
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
library(RODBC)
library(ggplot2)
library(reshape)
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar()
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar(stat="identity")
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar(stat="identity", color=variable)
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar(stat="identity", color="variable")
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar(stat="identity", color=variable)
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar(stat="identity", fill=variable)
g = ggplot(meltedRowCnt[meltedRowCnt$FINELINE_NO==1,], aes(x=variable, y=value))
g + geom_bar(stat="identity", aes(fill=variable))
g = ggplot(meltedRowCnt[meltedRowCnt, aes(x=variable, y=value))
g = g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(stat="identity", aes(fill=variable))
g = ggplot(meltedRowCnt[meltedRowCnt, aes(x=variable, y=value))
g = g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(stat="identity", aes(fill=variable))
g = ggplot(meltedRowCnt[meltedRowCnt, aes(x=variable, y=value))
g + geom_bar(stat="identity", aes(fill=variable))
g = g + facet_grid(. ~ FINELINE_NO)
g = ggplot(meltedRowCnt[meltedRowCnt, aes(x=variable, y=value))
g = ggplot(meltedRowCnt[meltedRowCnt], aes(x=variable, y=value))
g + geom_bar(stat="identity", aes(fill=variable))
g = g + facet_grid(. ~ FINELINE_NO)
g = ggplot(meltedRowCnt[meltedRowCnt], aes(x=variable, y=value))
g = ggplot(meltedRowCnt, aes(x=variable, y=value))
g = g + facet_grid(. ~ FINELINE_NO)
g + geom_bar(stat="identity", aes(fill=variable))
warnings()
View(merged)
merged$rowCntDiff = merged$rowCnt.y - merged$rowCnt.x
View(merged)
g = ggplot(merged, aes(x=FINELINE_NO, y=rowCntDiff))
g + geom_bar(stat="identity")
source('C:/Users/Millerbarr/Desktop/FinelineAnalysis/fineLineAnalysis.R')
g = ggplot(merged, aes(x=FINELINE_NO, y=rowCntDiff))
g + geom_bar(stat="identity")
for(f in unique(meltedRowCnt$FINELINE_NO)){
g = ggplot((meltedRowCnt$FINELINE_NO == f), aes(x=variable, y=value))
g + geom_bar(stat="identity", aes(fill=variable))
}
library(RODBC)
library(ggplot2)
library(reshape)
for(f in unique(meltedRowCnt$FINELINE_NO)){
g = ggplot((meltedRowCnt$FINELINE_NO == f), aes(x=variable, y=value))
g + geom_bar(stat="identity", aes(fill=variable))
}
source('C:/Users/Millerbarr/Desktop/FinelineAnalysis/fineLineAnalysis.R')
for(f in unique(meltedRowCnt$FINELINE_NO)){
g = ggplot((meltedRowCnt[meltedRowCnt$FINELINE_NO == f,]), aes(x=variable, y=value))
g + geom_bar(stat="identity", aes(fill=variable))
}
source('C:/Users/Millerbarr/Desktop/FinelineAnalysis/fineLineAnalysis.R')
?melt
source('C:/Users/Millerbarr/Desktop/FinelineAnalysis/fineLineAnalysis.R')
?lapply
# Function to plot and save a fineline from a df
doPlot = function(fl, df) {
dum = subset(df, FINELINE_NO == fl)
ggobj = ggplot(data = dum, aes(x=variable, y=value)) + geom_bar(stat="identity", aes(fill=RowCntSource))
print(ggobj)
ggsave(sprintf("%s.pdf", fl))
}
lapply(unique(meltedRowCnt$FINELINE_NO), doPlot, meltedRowCnt)
# Function to plot and save a fineline from a df
doPlot = function(fl, df) {
dum = subset(df, FINELINE_NO == fl)
ggobj = ggplot(data = dum, aes(x=RowCntSource, y=value)) + geom_bar(stat="identity", aes(fill=RowCntSource))
print(ggobj)
ggsave(sprintf("%s.pdf", fl))
}
lapply(unique(meltedRowCnt$FINELINE_NO), doPlot, meltedRowCnt)
setwd("C:/Users/Millerbarr/Desktop/FinelineAnalysis")
source('C:/Users/Millerbarr/Desktop/FinelineAnalysis/fineLineAnalysis.R')
